name: Build and Publish

on:
  workflow_dispatch:

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-24.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MoonBit CLI (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
          iwr https://cli.moonbitlang.cn/install/powershell.ps1 -UseBasicParsing | iex
          "$Env:USERPROFILE/.moon/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          # 立即在当前 step 生效 PATH
          $env:PATH = "$Env:USERPROFILE/.moon/bin;" + $env:PATH
          if (-not (Test-Path "$Env:USERPROFILE/.moon/bin/moon")) { Write-Error 'MoonBit CLI 安装失败: 未找到 moon 可执行文件'; exit 1 }
          moon version

      - name: MoonBit registry update (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          moon update || echo "moon update 可能已部分失败, 后续 build 若仍失败请检查网络/registry"

      - name: Install MoonBit CLI (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          curl -fsSL https://cli.moonbitlang.cn/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH
          # 让当前 step 也能使用 moon（echo 到 GITHUB_PATH 只对后续 steps 生效）
          export PATH="$HOME/.moon/bin:$PATH"
          test -x "$HOME/.moon/bin/moon" || { echo 'MoonBit CLI 安装失败: 未找到 moon 可执行文件'; exit 1; }
          moon version

      - name: MoonBit registry update (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          moon update || echo "moon update 遇到问题(可能网络), 继续尝试构建"

      - name: Install system dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf pkg-config libgtk-3-dev libglib2.0-dev libgdk-pixbuf2.0-dev libsoup-3.0-dev

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: bun install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Ad-hoc signing for macOS to allow building without certificates
          APPLE_SIGNING_IDENTITY: ${{ matrix.platform == 'macos-latest' && '-' || '' }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  # Android 构建（使用 Tauri v2 移动支持）
  build-android:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MoonBit CLI
        run: |
          curl -fsSL https://cli.moonbitlang.cn/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH
          export PATH="$HOME/.moon/bin:$PATH"
          test -x "$HOME/.moon/bin/moon" || { echo 'MoonBit CLI 安装失败: 未找到 moon 可执行文件'; exit 1; }
          export PATH="$HOME/.moon/bin:$PATH"
          test -x "$HOME/.moon/bin/moon" || { echo 'MoonBit CLI 安装失败: 未找到 moon 可执行文件'; exit 1; }

      - name: MoonBit registry update
        run: |
          moon update || echo "moon update 遇到问题(可能网络), 继续尝试构建"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Java (Android 构建需要 JDK 17)
        uses: actions/setup-java@v4
        with:
            distribution: 'temurin'
            java-version: '17'

      - name: Install Rust (含 Android 目标)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK Components & NDK
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653"
          yes | sdkmanager --licenses
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Install frontend deps
        run: bun install

      - name: Prepare dist (WASM bundle)
        run: bun run bundle

      - name: Init Android project (若已存在 gen/android 可去掉)
        run: |
          cd src-tauri
          cargo tauri android init --force

      - name: Build Android APK (Debug Universal)
        run: |
          cd src-tauri
          cargo tauri android build --apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: src-tauri/gen/android/**/outputs/**/*.apk

  # iOS 构建（需要 macOS Runner，当前只生成未签名的 .app / .ipa Debug 产物）
  build-ios:
    if: github.event_name == 'workflow_dispatch'
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MoonBit CLI
        run: |
          curl -fsSL https://cli.moonbitlang.cn/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH

      - name: MoonBit registry update
        run: |
          moon update || echo "moon update 遇到问题(可能网络), 继续尝试构建"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Rust (iOS 目标)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios,aarch64-apple-ios-sim

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend deps
        run: bun install

      - name: Prepare dist (WASM bundle)
        run: bun run bundle

      - name: Init iOS project (若已存在 gen/apple 可去掉)
        run: |
          cd src-tauri
          cargo tauri ios init --force

      - name: Build iOS (Debug)
        run: |
          cd src-tauri
          cargo tauri ios build

      - name: Upload iOS build artifact (.app / 产物目录)
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: |
            src-tauri/gen/apple/**/*.app
            src-tauri/gen/apple/**/Build/Products/**/*

      # 生成 .ipa 需要有效的签名证书与导出配置，这里暂不自动化打包 ipa